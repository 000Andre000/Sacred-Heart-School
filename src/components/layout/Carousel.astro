---
// Components
import { Image } from "astro:assets";

// Icons
import { Next, Prev } from "../../assets/icons";

// Swiper CSS
import "swiper/css";
import "swiper/css/navigation";
import "swiper/css/pagination";
import "swiper/css/effect-fade";

interface Props {
  media: Array<string> | ImageMetadata[];
  id: string;
  type: string;
  theme?: string;
}
const { media, id, type, theme } = Astro.props as Props;
---

<custom-carousel data-id={id} data-type={type}>
  <div class="swiper overflow-hidden md:w-full px-2" id={"swiper_" + id}>
    <!-- Additional required wrapper -->
    <div class="swiper-wrapper">
      <!-- Slides -->
      {
        type == "img"
          ? media.map((photo) => (
              <div class="swiper-slide h-full grid place-items-center">
                <Image
                  src={photo}
                  alt="image"
                  class="object-cover h-full w-full rounded-lg"
                />
              </div>
            ))
          : media.map((video) => (
              <div class="swiper-slide grid place-items-center aspect-video bg-dark-slate rounded-xl shadow-lg">
                <video
                  preload="true"
                  controls="true"
                  class="h-full mx-auto"
                  playsinline=""
                  loop="false"
                >
                  <source src={video} type="video/mp4" />
                </video>
              </div>
            ))
      }
    </div>
  </div>
  <div class="swiper-btns mt-3 flex items-center justify-between">
    <div class={theme == "accent" ? "" : "text-primary"}>
      <button class={"mr-4 slide-prev-swiper_" + id}>
        <Fragment set:html={Prev} />
      </button>
      <button class={"ml-4 slide-next-swiper_" + id}>
        <Fragment set:html={Next} />
      </button>
    </div>
    <div
      class={(theme == "accent"
        ? "[--swiper-pagination-color:#FFFFFF] [--swiper-pagination-bullet-inactive-color:#FFFFFF] [--swiper-pagination-bullet-inactive-opacity:0.4]"
        : "[--swiper-pagination-color:#ED1E27]") +
        " swiper-pagination-swiper_" +
        id}
    >
    </div>
  </div>
</custom-carousel>

<style>
  .swiper-pagination {
    @apply relative;
  }
  .swiper-pagination-bullets.swiper-pagination-horizontal {
    @apply bottom-0;
  }
  .swiper-pagination-horizontal.swiper-pagination-bullets.swiper-pagination-bullets-dynamic {
    @apply left-0 translate-x-0;
  }
  .swiper-btns button {
    @apply scale-150;
  }
</style>
<script>
  // Swiper
  import Swiper from "swiper";
  import { EffectFade, Autoplay, Navigation, Pagination } from "swiper/modules";

  Swiper.use([EffectFade, Autoplay, Navigation, Pagination]);

  class CustomCarousel extends HTMLElement {
    constructor() {
      super();

      // Read the message from the data attribute.
      const _id = "swiper_" + this.dataset.id;
      const _type = this.dataset.type;
      const swiper = new Swiper("#" + _id, {
        loop: true,
        effect: "fade",
        autoplay: {
          delay: 2500,
          disableOnInteraction: false,
        },
        navigation: {
          nextEl: ".slide-next-" + _id,
          prevEl: ".slide-prev-" + _id,
        },
        pagination: {
          el: ".swiper-pagination-" + _id,
          dynamicBullets: true,
        },
      });
      if (_type == "video") swiper.autoplay.stop();
    }
  }

  customElements.define("custom-carousel", CustomCarousel);
</script>
