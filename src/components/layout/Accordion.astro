---
// Types
import { type tab } from "./types";

// Components
import {
  Curriculum as PrePrimaryCurriculum,
  Subjects as PrePrimarySubjects,
  Planner as PrePrimaryPlanner,
} from "../../components/academic/pre-primary";
import {
  Curriculum as PrimaryCurriculum,
  Subjects as PrimarySubjects,
  Planner as PrimaryPlanner,
} from "../../components/academic/primary";

// Icons
import { Document, BookOpen, Calender } from "../../assets/icons";

// Document - Curriculum
// BookOpen - Syllabus
// Calender - Planner

interface Props {
  section: string;
  tabs: tab[];
}

const book = `url(${BookOpen})`;

const { section, tabs } = Astro.props as Props;
---

<div
  role="tablist"
  data-theme="light"
  class="tabs grid-cols-3 tabs-lifted pb-12 items-"
>
  {
    tabs.map((tab, idx) => (
      <>
        <input
          type="radio"
          name="my_tabs_1"
          role="tab"
          class="tab text-slate-200 checked:text-slate-600 sm:text-xl tab-logo"
          aria-label={tab.title}
          checked={idx == 0 ? true : false}
        />
        <div
          role="tabpanel"
          class={
            "tab-content p-6 bg-base-200 text-slate-600 rounded-md " +
            (idx == 1 ? "" : idx == 0 ? "rounded-tl-none" : "rounded-tr-none")
          }
        >
          {section.toLowerCase() === "pre-primary" && (
            <>
              {tab.title === "Curriculum" && <PrePrimaryCurriculum />}
              {tab.title === "Subjects" && <PrePrimarySubjects />}
              {tab.title === "Planner" && <PrePrimaryPlanner />}
            </>
          )}
          {section.toLowerCase() === "primary" && (
            <>
              {tab.title === "Curriculum" && <PrimaryCurriculum />}
              {tab.title === "Subjects" && <PrimarySubjects />}
              {tab.title === "Planner" && <PrimaryPlanner />}
            </>
          )}
        </div>
      </>
    ))
  }
</div>
<style define:vars={{ book }}>
  .tabs > input:last-of-type()::before {
    background-image: var(--radius-start);
  }
  .tabs > input:checked {
    @apply bg-base-200 border-b-transparent;
  }
</style>
